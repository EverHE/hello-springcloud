spring:
  application:
    name: route-zuul

server:
  port: 8888

eureka:
  client:
    serviceUrl:
      defaultZone: http://lishangzhi:123456@localhost:8101/eureka
  instance:
    prefer-ip-address: true # 启用ip配置 这样在注册中心列表中看见的是以ip+端口呈现的
    instanceId: ${spring.application.name}:${server.port}


#默认情况下：Zuul代理所有注册到EurekaServer的微服务
#路由规则： http://ZUUL_HOST:ZUUL_PORT/微服务实例名(serverId)/** 转发至serviceId对应的微服务。
zuul:
  routes:
    #静态资源路由配置
    ui-js:
      path: /**/**.js
      serviceId: reborn-ui-server
    #静态资源路由配置
    ui-html:
      path: /**/**.html
      serviceId: reborn-ui-server

    #服务发现模式
    api-a:
      path: /api-a/**  # /api-user开头的请求，全部转发到sea-service-user服务中去
      serviceId: CLIENTRIBBON  # 应用名称
    api-b:
      path: /api-b/**
      serviceId: CLIENTFEIGN

    #传统路由配置：不依赖服务发现。
    #所有以myapi开头的url路由至http://127.0.0.1:2000/下
    #如http://127.0.0.1:8888/myapi/hello --> http://127.0.0.1:2000/hello
    myApi:
      path: /myapi/**
      url: http://127.0.0.1:2000

    #forward模式 直接转发至zuul提供的rest服务
    #如http://127.0.0.1:8888/myDemo/hello?name=oKong --> http://127.0.0.1:8888/demo/hello?name=oKong
    myDemo:
      path: /myDemo/**
      url: forward:/demo

#  #转发前是否去掉路由前缀
#  #此为全局配置，可以配到具体路由规则下改为局部配置
#  #原始的url: https://zuulIp:zuulPort/test/demo1/hello
#  #如果这个参数设置为true，Demo1服务收到的请求url就是https://demo1Ip:demo1Port/test/hello
#  #如果这个参数设置为false，Demo1服务收到的请求url就是https://demo1Ip:demo1Port/test/demo1/hello
#  strip-prefix: true
#
#  #可设置不过滤
#  #此为全局配置，可以配到具体路由规则下改为局部配置
#  sensitive-headers: "*"
#  #sensitive-headers: Cookie,Set-Cookie,Authorization
#
#  #忽略所有微服务，只路由指定的微服务
#  ignored-services: "*"
#  #忽略某些微服务
#  #ignored-services: aaa,bbb
#  #忽略某些路径不进行路由
#  ignored-patterns: "/**/selectOne/**"
#
#  #为所有路由都增加一个统一的前缀
#  prefix: "/xxx"
#
#  #忽略header,表示被zuul路由的服务都不会传递 token 这个请求头。
#  #此为全局配置，如果需要局部某个服务中配置，使用敏感头sensitive-headers
#  ignored-headers: token